'use client';

import { useState, useEffect } from 'react';
import { X, Bot, Download, RefreshCw, TrendingUp, Clock, MapPin } from 'lucide-react';
import { motion } from 'framer-motion';

interface AIBriefPanelProps {
  location: any;
  user: any;
  onClose: () => void;
}

interface BriefSection {
  title: string;
  content: string;
  category: string;
  importance: 'high' | 'medium' | 'low';
  articles: number;
}

export function AIBriefPanel({ location, user, onClose }: AIBriefPanelProps) {
  const [brief, setBrief] = useState<{
    summary: string;
    sections: BriefSection[];
    insights: string[];
    trending: string[];
    generated_at: string;
  } | null>(null);
  const [isGenerating, setIsGenerating] = useState(false);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    generateBrief();
  }, []);

  const generateBrief = async () => {
    setIsGenerating(true);
    setError(null);
    
    try {
      const response = await fetch('/api/ai/brief', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          location: location,
          preferences: user?.preferences,
        }),
      });

      if (response.ok) {
        const briefData = await response.json();
        setBrief(briefData);
      } else {
        // Fallback to demo brief
        setBrief(getDemoBrief());
      }
    } catch (error) {
      console.error('Failed to generate brief:', error);
      setBrief(getDemoBrief());
    } finally {
      setIsGenerating(false);
    }
  };

  const getDemoBrief = () => ({
    summary: "Today's key developments include significant AI policy discussions at the UN Security Council, breakthrough climate agreements, and major technological advancements. The Pakistan defense minister's remarks on AI governance have sparked international dialogue about artificial intelligence regulation and its global implications.",
    sections: [
      {
        title: 'AI & Technology',
        content: 'Pakistan defense minister Khawaja Asif addressed the UN Security Council on AI governance, highlighting the critical need for international cooperation in AI regulation. The discussion emphasized balancing innovation with ethical considerations and national security implications.',
        category: 'Technology',
        importance: 'high' as const,
        articles: 8
      },
      {
        title: 'Global Politics',
        content: 'International relations continue to evolve with new diplomatic initiatives and policy frameworks. Recent discussions at various international forums indicate a shift towards more collaborative approaches to global challenges.',
        category: 'Politics',
        importance: 'high' as const,
        articles: 12
      },
      {
        title: 'Climate & Environment',
        content: 'Environmental initiatives gain momentum with new renewable energy projects and sustainability commitments from major corporations. Climate summit agreements show promising progress toward carbon neutrality goals.',
        category: 'Environment',
        importance: 'medium' as const,
        articles: 6
      },
      {
        title: 'Economic Updates',
        content: 'Market trends reflect growing confidence in tech sectors and renewable energy investments. Global economic indicators suggest steady recovery with emerging markets showing particular strength.',
        category: 'Business',
        importance: 'medium' as const,
        articles: 10
      }
    ],
    insights: [
      'AI governance is becoming a critical diplomatic priority',
      'Climate commitments are accelerating across industries',
      'Technology regulation requires international coordination',
      'Economic recovery shows regional variations'
    ],
    trending: ['AI Regulation', 'Climate Action', 'International Diplomacy', 'Tech Innovation', 'Sustainable Energy'],
    generated_at: new Date().toISOString()
  });

  const getImportanceColor = (importance: string) => {
    switch (importance) {
      case 'high': return 'bg-red-500';
      case 'medium': return 'bg-yellow-500';
      case 'low': return 'bg-green-500';
      default: return 'bg-gray-500';
    }
  };

  const downloadBrief = () => {
    if (!brief) return;
    
    const briefText = `
LiveNews AI Brief - ${new Date(brief.generated_at).toLocaleDateString()}
${location ? `Location: ${location.city}, ${location.country}` : ''}

EXECUTIVE SUMMARY
${brief.summary}

DETAILED SECTIONS
${brief.sections.map(section => `
${section.title.toUpperCase()} (${section.articles} articles)
${section.content}
`).join('')}

KEY INSIGHTS
${brief.insights.map(insight => `‚Ä¢ ${insight}`).join('\n')}

TRENDING TOPICS
${brief.trending.join(', ')}

Generated by LiveNews AI at ${new Date(brief.generated_at).toLocaleString()}
    `;
    
    const blob = new Blob([briefText], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `livenews-brief-${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm">
      <motion.div
        initial={{ opacity: 0, scale: 0.9 }}
        animate={{ opacity: 1, scale: 1 }}
        exit={{ opacity: 0, scale: 0.9 }}
        className="bg-white rounded-2xl shadow-2xl w-full max-w-4xl mx-4 max-h-[90vh] overflow-hidden"
      >
        {/* Header */}
        <div className="bg-gradient-to-r from-purple-600 to-blue-600 text-white p-6">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <Bot size={28} />
              <div>
                <h2 className="text-xl font-bold">AI News Brief</h2>
                <p className="text-purple-100 text-sm">
                  {location && `${location.city}, ${location.country} ‚Ä¢ `}
                  Personalized intelligence summary
                </p>
              </div>
            </div>
            <div className="flex items-center gap-2">
              <button
                onClick={generateBrief}
                disabled={isGenerating}
                className="p-2 text-white/80 hover:text-white hover:bg-white/20 rounded-lg transition-colors disabled:opacity-50"
                title="Refresh Brief"
              >
                <RefreshCw size={20} className={isGenerating ? 'animate-spin' : ''} />
              </button>
              {brief && (
                <button
                  onClick={downloadBrief}
                  className="p-2 text-white/80 hover:text-white hover:bg-white/20 rounded-lg transition-colors"
                  title="Download Brief"
                >
                  <Download size={20} />
                </button>
              )}
              <button
                onClick={onClose}
                className="p-2 text-white/80 hover:text-white hover:bg-white/20 rounded-lg transition-colors"
              >
                <X size={20} />
              </button>
            </div>
          </div>
        </div>

        <div className="p-6 overflow-y-auto max-h-[calc(90vh-120px)]">
          {isGenerating ? (
            <div className="flex flex-col items-center justify-center py-12">
              <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600 mb-4"></div>
              <p className="text-gray-600 text-lg font-medium">Generating AI Brief...</p>
              <p className="text-gray-500 text-sm">Analyzing latest news and trends</p>
            </div>
          ) : error ? (
            <div className="text-center py-12">
              <div className="text-red-500 text-lg mb-2">‚ö†Ô∏è</div>
              <h3 className="text-lg font-medium text-gray-600 mb-2">Failed to Generate Brief</h3>
              <p className="text-gray-500 text-sm mb-4">{error}</p>
              <button
                onClick={generateBrief}
                className="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors"
              >
                Try Again
              </button>
            </div>
          ) : brief ? (
            <div className="space-y-8">
              {/* Metadata */}
              <div className="flex items-center gap-4 text-sm text-gray-500 pb-4 border-b border-gray-200">
                <div className="flex items-center gap-1">
                  <Clock size={16} />
                  <span>Generated {new Date(brief.generated_at).toLocaleTimeString()}</span>
                </div>
                {location && (
                  <div className="flex items-center gap-1">
                    <MapPin size={16} />
                    <span>{location.city}, {location.country}</span>
                  </div>
                )}
                <div className="flex items-center gap-1">
                  <TrendingUp size={16} />
                  <span>{brief.sections.reduce((acc, s) => acc + s.articles, 0)} articles analyzed</span>
                </div>
              </div>

              {/* Executive Summary */}
              <div className="bg-gradient-to-r from-purple-50 to-blue-50 rounded-xl p-6 border border-purple-200">
                <h3 className="text-lg font-semibold text-gray-800 mb-3">üìã Executive Summary</h3>
                <p className="text-gray-700 leading-relaxed">{brief.summary}</p>
              </div>

              {/* Key Sections */}
              <div>
                <h3 className="text-lg font-semibold text-gray-800 mb-4">üìä Detailed Analysis</h3>
                <div className="grid gap-4">
                  {brief.sections.map((section, index) => (
                    <motion.div
                      key={section.title}
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: index * 0.1 }}
                      className="bg-white border border-gray-200 rounded-xl p-5 hover:shadow-md transition-shadow"
                    >
                      <div className="flex items-start justify-between mb-3">
                        <div className="flex items-center gap-3">
                          <div className={`w-3 h-3 rounded-full ${getImportanceColor(section.importance)}`}></div>
                          <h4 className="font-semibold text-gray-800">{section.title}</h4>
                        </div>
                        <div className="flex items-center gap-2 text-sm text-gray-500">
                          <span className="px-2 py-1 bg-gray-100 rounded-full">{section.category}</span>
                          <span>{section.articles} articles</span>
                        </div>
                      </div>
                      <p className="text-gray-700 leading-relaxed">{section.content}</p>
                    </motion.div>
                  ))}
                </div>
              </div>

              {/* Insights and Trending */}
              <div className="grid md:grid-cols-2 gap-6">
                {/* Key Insights */}
                <div className="bg-green-50 rounded-xl p-5 border border-green-200">
                  <h4 className="font-semibold text-gray-800 mb-3 flex items-center gap-2">
                    üí° Key Insights
                  </h4>
                  <ul className="space-y-2">
                    {brief.insights.map((insight, index) => (
                      <li key={index} className="text-sm text-gray-700 flex items-start gap-2">
                        <span className="text-green-600 mt-1">‚Ä¢</span>
                        <span>{insight}</span>
                      </li>
                    ))}
                  </ul>
                </div>

                {/* Trending Topics */}
                <div className="bg-orange-50 rounded-xl p-5 border border-orange-200">
                  <h4 className="font-semibold text-gray-800 mb-3 flex items-center gap-2">
                    üî• Trending Topics
                  </h4>
                  <div className="flex flex-wrap gap-2">
                    {brief.trending.map((topic, index) => (
                      <span
                        key={index}
                        className="px-3 py-1 bg-orange-100 text-orange-700 text-sm rounded-full border border-orange-200"
                      >
                        {topic}
                      </span>
                    ))}
                  </div>
                </div>
              </div>

              {/* Footer */}
              <div className="text-center text-sm text-gray-500 pt-4 border-t border-gray-200">
                <p>This brief was generated by LiveNews AI using advanced natural language processing.</p>
                <p>Data is analyzed from multiple verified news sources and personalized based on your preferences.</p>
              </div>
            </div>
          ) : null}
        </div>
      </motion.div>
    </div>
  );
}
